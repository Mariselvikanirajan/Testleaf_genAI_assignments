Homework Assignment 2:

Integrate the prompt to your API (using postman) and confirm the response (json)

Objective: You can integrate prompt + LLM API

Provide a user story from your project or sample userstory--> ask to convert into non-functional testcases
-----------------------

Instructions:
Write a non functional test cases for Cloud storage application.
Focus on performance, scalability, and reliability aspects.
verify the functinality with multiple buckets and large files (More than 1TB),more than 2000 objects.
Provide at least 10 detailed non-functional test cases.
Provide Test case ID, Description, Actual result, Expected result, steps for each test cases

Context:
You are an AI assistant to prepare "Non functional test case sheet" for a Cloud Storage Application.

Example:
Upload/download speed and latency
System performance under heavy load
Storage scalability and limits
Data retrieval time with high object count
System behavior with concurrent users or large transactions

Output:
Present the results in a tabular format suitable for documentation or Excel export.

Persona:
Act as a "Senior QA engineer".

---------------------

Response:
| **Test Case ID** | **Test Case Description**                                                | **Test Steps**                                                                                                                         | **Expected Result**                                                                                                           | **Actual Result** |
| ---------------- | ------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- | ----------------- |
| **NFTC_001**     | **Verify file upload performance for large files (â‰¥1TB)**                | 1. Upload a 1TB+ file to a storage bucket. <br>2. Monitor upload time and bandwidth utilization.                                       | Upload completes within defined SLA (e.g., < 2 hours on 1 Gbps network). <br>No timeout or corruption occurs.                 | *To be tested*    |
| **NFTC_002**     | **Evaluate system behavior under concurrent uploads (1000+ users)**      | 1. Simulate 1000 users uploading files simultaneously. <br>2. Observe CPU, memory, and network utilization.                            | System handles concurrent uploads without crashes or severe degradation. <br>Average upload latency within acceptable limits. | *To be tested*    |
| **NFTC_003**     | **Test download speed and latency for large objects**                    | 1. Download a 1TB object from the cloud bucket. <br>2. Measure throughput and latency.                                                 | Download completes successfully with expected transfer rate (within defined SLA).                                             | *To be tested*    |
| **NFTC_004**     | **Verify scalability with increasing object count (>2000 objects)**      | 1. Create multiple buckets containing >2000 objects. <br>2. Measure object listing time and retrieval latency.                         | System efficiently handles large object counts without performance drop.                                                      | *To be tested*    |
| **NFTC_005**     | **Measure response time for metadata retrieval under load**              | 1. Retrieve metadata (size, type, owner) for 2000+ objects concurrently. <br>2. Capture average response time.                         | Response time remains under defined limit (e.g., < 200 ms per object).                                                        | *To be tested*    |
| **NFTC_006**     | **Evaluate system recovery after unexpected failure (Reliability Test)** | 1. Start uploading large files. <br>2. Simulate system failure (e.g., network disconnect). <br>3. Observe recovery and resume process. | Upload resumes automatically after recovery without data loss or corruption.                                                  | *To be tested*    |
| **NFTC_007**     | **Measure system throughput during peak load**                           | 1. Simulate multiple concurrent upload/download operations. <br>2. Measure total throughput (MB/s).                                    | Throughput remains consistent and within performance benchmark thresholds.                                                    | *To be tested*    |
| **NFTC_008**     | **Test auto-scaling capability under heavy storage demand**              | 1. Continuously upload files until total storage exceeds allocated capacity. <br>2. Monitor auto-scaling trigger and response time.    | System auto-scales storage capacity seamlessly without service interruption.                                                  | *To be tested*    |
| **NFTC_009**     | **Evaluate data retrieval performance under concurrent access**          | 1. Simulate 500+ users retrieving the same large file. <br>2. Measure latency and system stability.                                    | Retrieval times remain stable; system does not crash or throttle access.                                                      | *To be tested*    |
| **NFTC_010**     | **Test durability and data integrity post high-load operations**         | 1. Upload large files (>1TB). <br>2. Perform checksum verification after upload and download.                                          | Data integrity maintained (checksums match). No corruption or partial failures detected.                                      | *To be tested*    |
